---
- name: MANAGE GUEST
  vars:
    guest_default_user: "debian" # for vm only
    gateway: "192.168.2.1"
    nameserver: "192.168.2.250" # for vm only, lxc defaults to dns of host
    swap_default_size: 0 # for lxc only
    delegate_to_pve_instance: "{{ groups['_pve'][0] }}" # the node where the lxc is created / the guest list is scraped
    current_guest_config: "{{ ansible_local.pve['guests_by_id'][vmid_str] }}"
    delegate_to_guest_pve_instance: "{{ ansible_local.pve['guests_by_id'][vmid_str]['node'] }}"
    ostemplate: "{{ available_platforms[platforms[0]].lxc_ostemplate }}" # = The platform set in the netbox entry
    rootfs_volume: "{{ guest_storage }}:{{ disk }}"
  block:
  - name: "Collect ansible_local on {{ delegate_to_pve_instance }}"
    delegate_to: "{{ delegate_to_pve_instance }}"
    setup:
      filter: ansible_local

  - name: BACKUP GUEST
    when: 
      - vmid_str in ansible_local.pve.guests_by_id
      - deploy_guest in ["redeploy", "purge", "backup"] or upgrade
      - supress_backup is undefined and not supress_backup
    include_tasks: backup_guest.yml


  - name: STOP OR REMOVE GUEST
    when:
    - vmid_str in ansible_local.pve.guests_by_id
    - deploy_guest in ["redeploy", "purge", "stop"] or status.value in ['offline', 'decommissioning'] or (stop_guest is defined and stop_guest)
    include_tasks: stop_or_remove_guest.yml


  - name: CREATE GUEST
    when: 
      - vmid_str not in ansible_local.pve['guests_by_id']
    include_tasks: create_guest.yml

  - name: Set current_pve_host as a fact
    set_fact:
      current_pve_host: "{{ ansible_local.pve.guests_by_id[vmid_str].node }}"

  - name: MODIFY GUEST
    include_tasks: modify_guest.yml

# End of Deployment block

- name: Finish play if deploy_guest == "only"
  meta: end_host
  when:
  - deploy_guest == "only"
