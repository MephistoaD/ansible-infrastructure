{% if 'proxy_targets' in vhost %}
upstream {{ vhost.name }}.upstream {
{% for proxy_target in vhost['proxy_targets'] %}
    server "{{ proxy_target }}";
{% endfor %}
}
{% endif %}

{% if 'https' in vhost and vhost['https']%}
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name {{ vhost.name }};

    access_log  /var/log/nginx/{{ vhost.name }}.access.log;

{% if vhost['https'] and'self-signed' in vhost['https'] %}
    ssl_certificate     {{ ssl_cert_path }};
    ssl_certificate_key {{ ssl_key_path }};
{% elif vhost['https'] and 'certbot' in vhost['https'] %}
    ssl_certificate     /etc/letsencrypt/live/{{ vhost.name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ vhost.name }}/privkey.pem; # managed by Certbot
{% endif %}

    # Some settings selecting stronger encryption
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    # Ignore self-signed certificate of the upstream server
    proxy_ssl_verify off;

{% if 'custom_config_lines' in vhost %}
{% for custom_config_line in vhost['custom_config_lines'] %}
    {{ custom_config_line }}
{% endfor %}
{% endif %}

{% if 'custom_locations' in vhost %}
{% for custom_location in vhost['custom_locations'] %}
    location {{ custom_location['location'] }} {
        default_type "text/plain";
        alias {{ custom_location['alias'] }};
{% if 'config_lines' in custom_location %}
{% for config_line in custom_location['config_lines'] %}
        {{ config_line }}
{% endfor %}
{% endif %}
    }
{% endfor %}
{% endif %}

{# {% if 'acme' in vhost['https'] and acme_challenge_dir is defined and false %}
    location /.well-known/acme-challenge/ {
        alias {{ acme_challenge_dir }};
        # try_files $uri =404;

        default_type "text/plain";
        root {{ acme_challenge_dir }};
       
        # Redirect ACME challenges to http://127.0.0.1:402/
        proxy_pass http://127.0.0.1:402/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_redirect off;
    }
{% endif %} #}

{% if 'proxy_targets' in vhost %}
    location / {
        proxy_pass          {{ 'http' if vhost.proxy_to_http is defined and vhost.proxy_to_http else 'https' }}://{{ vhost.name }}.upstream;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto https;
        proxy_ssl_name      $host;
    }
{% endif %}
}
{% endif %}

# This block is located here to log the requests correctly
server {
    listen 80;
    listen [::]:80;

    server_name {{ vhost.name }};

    access_log  /var/log/nginx/{{ vhost.name }}.access.log;

{# {% if 'acme' in vhost['https'] and acme_challenge_dir is defined and false %}
    location /.well-known/acme-challenge/ {
        alias {{ acme_challenge_dir }};
        # try_files $uri =404;

        default_type "text/plain";
        root {{ acme_challenge_dir }};

        # Redirect ACME challenges to http://127.0.0.1:402/
        proxy_pass http://127.0.0.1:402/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_redirect off;
    }
{% endif %} #}

    location / {
{% if vhost['https'] %}
        # Redirect other requests to https
        return 301 https://$host$request_uri;
{% else %}
        proxy_pass          http://{{ vhost.name }}.upstream;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto http;
        proxy_ssl_name      $host;
{% endif %}
    }
}