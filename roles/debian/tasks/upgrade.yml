---
- name: Reconfigure packages (particularly necessary after install of a fresh vm)
  shell:
    executable: /bin/bash
    cmd: dpkg --configure -a
  register: dpkg_reconfigure
  changed_when: dpkg_reconfigure.stdout != ""

- name: Dry run apt full-upgrade
  shell: |
    apt-get -s \
      -o Debug::NoLocking=true \
      -o APT::Get::Always-Include-Phased-Updates=true \
      dist-upgrade \
      --auto-remove
  register: upgrade_output
  changed_when: false
  failed_when: false

- name: Print packages to be upgraded
  debug:
    msg: "{{ upgrade_output.stdout_lines }}"

- name: Dist-upgrade
  apt:
    clean: true # clean cache afterwards
    upgrade: dist
    autoremove: yes
    allow_change_held_packages: true # in ubuntu the package is held in case the dependency tree changed structurally
  diff: true
  register: dist_upgrade_output

- name: Reboot the system
  reboot:
    msg: "Reboot initiated by Ansible for upgrade"
  when: dist_upgrade_output.changed

- name: Wait for system to come back online
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 22
    state: started
    delay: 10
    timeout: 600 # 10 minutes
  when: dist_upgrade_output.changed

- name: Autoremove packages on node
  apt:
    autoremove: yes

- name: Export last_system_upgrade via prometheus
  template:
    src: var_lib_prometheus_node-exporter_last_system_upgrade.prom.j2
    dest: /var/lib/prometheus/node-exporter/last_system_upgrade.prom
