---
- name: "Role {{ role_name }}"
  vars:
    foo_: "{{ local_context_data[0]['foo'] | default(foo) }}"
    
  when:
    - only_role is undefined or only_role == role_name
  block:
  # Assertions
  - name: "Preventive assertions of role {{ role_name }}"
    vars:
      nr_other_active_nodes: "{{ ansible_local.pve.guests_by_node | dict2items | map(attribute='value') | rejectattr('node', 'equalto', inventory_hostname) | selectattr('node_state', 'equalto', 'ACTIVE') | length }}"
    assert:
      that:
        - "{{ item.check }}"
      fail_msg: "{{ item.msg }}"
    loop_control:
      label: "{{ item.msg }}"
    loop:
      - check: "{{ not is_virtual or technology == 'vm' }}"
        msg: "Assert that the PVE host is either a phisical device or a vm."
      - check: "{{ not upgrade or nr_other_active_nodes | int >= 1 }}"
        msg: "Assert that on an upgrade other nodes are 'ACTIVE'"
  # Scripts

  # Tasks
  - include_tasks: prepare.yml
    when:
      - not quick

  - include_role:
      name: debian
    when:
      - not upgrade

  - include_tasks: install.yml
    when:
      - not quick

  - include_tasks: ansible_local.yml

  # Preparation for upgrade
  - include_tasks: drain_node.yml
    when: 
      - (drain_node or upgrade)

  - include_role: # disable ceph self-healing
      name: pveceph
      tasks_from: pre_upgrade
    when:
      - pveceph_enabled
      - upgrade

  # Actual Upgrade
  - include_role:
      name: debian
    when: 
      - upgrade

  - include_tasks: configure.yml

  - include_tasks: join_cluster.yml
    when:
      - cluster is defined
      - not is_virtual

  - include_tasks: prometheus_exporter.yml

  - include_role: # install and setup of ceph
      name: pveceph
    when: pveceph_enabled

  # Post Upgrade
  - include_role: # reenable ceph self-healing
      name: pveceph
      tasks_from: post_upgrade
    when:
      - pveceph_enabled
      - upgrade

  - include_tasks: undrain_node.yml
    when:
      - (undrain_node or upgrade)

  # Tests
