---
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'example'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['localhost:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
{% for rules_file in rules_files %}
  - {{ rules_file }}
{% endfor %}

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
{#
  Generic exporter job
#}

{% for role in dependency_map %}
{% if dependency_map[role].exporter_port %}
  - job_name: '{{ role }}'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target] # make sure the port is not shown behind the address
        target_label: instance
      - source_labels: [__address__] # add the port behind the targets
        regex: (.*)
        replacement: $1:{{ dependency_map[role].exporter_port }}
        target_label: __address__
        action: replace
{% if dependency_map[role].exporter_path %}
    metrics_path: '{{ dependency_map[role].exporter_path }}'
{# defaults to /metrics #}
{% endif %}
    static_configs:
      - targets:
{% for group in dependency_map[role].dependent_roles | sort %}
{% if '_' + group in groups %}
{% for host in groups['_' + group] | sort %}
        - {{ host }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% endfor %}

{#
  Hardcoded exporter jobs
#}

  - job_name: node_exporter
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target] # make sure the port is not shown behind the address
        target_label: instance
      - source_labels: [__address__] # add the port 9100 behind the targets
        regex: (.*)
        replacement: $1:9100
        target_label: __address__
        action: replace
    static_configs:
      - targets:
{% for item in node_exporter_hosts %}
        - {{ item }}
{% endfor %}

  - job_name: node_exporter_lxc
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target] # make sure the port is not shown behind the address
        target_label: instance
      - source_labels: [__address__] # add the port 9100 behind the targets
        regex: (.*)
        replacement: $1:9100
        target_label: __address__
        action: replace
    static_configs:
      - targets:
    {% for item in node_exporter_lxc %}
        - {{ item }}
    {% endfor %}

{% if '_netbox' in groups %}
  - job_name: 'netbox_exporter' # might not work yet
    static_configs:
      - targets:
{% for host in groups['_netbox'] %}
        - {{ host }}
{% endfor %}
{% endif %}
