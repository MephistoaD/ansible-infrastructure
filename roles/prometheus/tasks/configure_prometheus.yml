---
- name: Get dependency map
  become: false
  local_action: 
    module: prometheus_dependency_map_info
    inventory_dir: "{{ inventory_dir }}"
    roles_dir: "{{ playbook_dir }}/../roles"
  register: role_dependencies

- name: CONFIGURE PROMETHEUS
  vars:
    guests: "{{ groups.all | map('extract', hostvars) | selectattr('custom_fields.technology', 'defined') | selectattr('custom_fields.technology', 'ne', 'lxc') | map(attribute='inventory_hostname') | list }}"
    devices: "{{ groups.all | difference(groups.is_virtual) }}"
    node_exporter_hosts: "{{ devices | union(guests) }}"
    dependency_map: "{{ role_dependencies.dependency_map }}"
  block:
  - debug:
      var: node_exporter_hosts

  - debug:
      var: dependency_map

  - name: Place prometheus configuration
    template:
      src: "prometheus.yml.j2"
      dest: "/etc/prometheus/prometheus.yml"
      owner: root
      group: root
      mode: '0644'
    register: prometheus_config

- name: Execute promtool script
  shell: /bin/promtool check config /etc/prometheus/prometheus.yml
  register: prometheus_config_validation
  failed_when: false
  changed_when: false

- name: Fail in case of invalid config
  fail:
    msg: "{{ prometheus_config_validation.stderr }}"
  when: prometheus_config_validation.rc != 0

- name: Reload prometheus
  systemd:
    name: prometheus
    state: reloaded
  when: >
    prometheus_config.changed
