---
- name: "Configure Project"
  block:
    - name: "Get list of current projects"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/projects"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_projects

    - name: "Create project '{{ semaphore_project }}'"
      changed_when: "semaphore_project_created.status == 201"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/projects"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        body:
          name: "{{ semaphore_project }}"
        body_format: json
        status_code: 201
        timeout: 5
      register: semaphore_project_created
      when:
        - "semaphore_project not in (semaphore_projects.json | map(attribute='name'))"

    - name: "Get updated list of current projects"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/projects"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_projects

    - name: "Set fact semaphore_project_id"
      ansible.builtin.set_fact:
        semaphore_project_id: >-
          {{ (semaphore_projects.json | selectattr('name', 'equalto', semaphore_project) | map(attribute='id') | first)
           | default(semaphore_project_created.json.id) }}


- name: "Configure Keystores"
  block:
    - name: "Get list of keystores in project {{ semaphore_project }}"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/keys"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_keystores
      when:
        - semaphore_add_local_ssh_key
  
    # SSH key for ansible user
    - name: "Read local ssh key"
      become: false
      no_log: true
      local_action:
        module: ansible.builtin.slurp
        path: "~/.ssh/id_rsa"
      register: ssh_key_ansible
      when: semaphore_add_local_ssh_key

    - name: "Create SSH key for ansible"
      changed_when: "semaphore_key_ansible_created.status == 204"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/keys"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        # project_id must be integer
        body: >-
          {
            "project_id": {{ semaphore_project_id | int }},
            "name": "ansible-ssh-key",
            "type": "ssh",
            "ssh":
              {
                "private_key": {{ ssh_key_ansible.content | b64decode | to_json }}
              }
            }
        body_format: json
        status_code: 204
        timeout: 5
      register: semaphore_key_ansible_created
      when:
        - semaphore_add_local_ssh_key
        - "semaphore_keystores.json | selectattr('name', 'equalto', 'ansible-ssh-key') | length == 0"

    - name: "Get updated list of keystores in project {{ semaphore_project }}"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/keys"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_keystores

    - name: Fail if Key is not created
      fail:
        msg: "ssh Key from ~/.ssh/id_rsa has not been imported did you pass the `semaphore_key_ansible_created` variable?"
      when: 
        - "semaphore_keystores.json | selectattr('name', 'equalto', 'ansible-ssh-key') | length == 0"

    - name: "Set fact semaphore_ssh_key_id"
      ansible.builtin.set_fact:
        semaphore_ssh_key_id: "{{ semaphore_keystores.json | selectattr('name', 'equalto', 'ansible-ssh-key') | map(attribute='id') | first }}"


- name: Configure upstream repo
  block:
    - name: "Get list of repositories in project {{ semaphore_project }}"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/repositories"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_repositories
    
    - name: "Create Repository"
      changed_when: "semaphore_repository_created.status == 204"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/repositories"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        # project_id must be integer
        body: >-
          {
            "project_id": {{ semaphore_project_id | int }},
            "name": "{{ semaphore_repository_name }}",
            "git_url": "{{ semaphore_repository_git_url }}",
            "git_branch": "{{ semaphore_repository_git_branch }}",
            "ssh_key_id": {{ semaphore_ssh_key_id | int }}
          }
        body_format: json
        status_code: 204
        timeout: 5
      register: semaphore_repository_created
      when:
        - "semaphore_repositories.json | selectattr('name', 'equalto', semaphore_repository_name) | length == 0"
    
    - name: "Get updated list of repositories in project {{ semaphore_project }}"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/repositories"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_repositories

    - name: "Set fact semaphore_repository_id"
      ansible.builtin.set_fact:
        semaphore_repository_id: "{{ semaphore_repositories.json \
          | selectattr('name', 'equalto', semaphore_repository_name) \
          | map(attribute='id') | first }}"


- name: "Configure environments"
  block:
    - name: "Get list of environments"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/environment"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_environments
      
    - name: "Create environments"
      changed_when: "semaphore_environment_created.status == 204"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/environment"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        # project_id must be integer
        body: >-
          {
            "project_id": {{ semaphore_project_id | int }},
            "name": "{{ item.view }}",
            "json": '{{ item.environment }}'
          }
        body_format: json
        status_code: 204
        timeout: 5
      register: semaphore_environment_created
      when:
        - "semaphore_environments.json | selectattr('name', 'equalto', item.view) | length == 0"
      loop: "{{ semaphore_tasks }}"
    
    - name: "Get updated list of environments"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/environment"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: "semaphore_environments"


- name: "Configure Inventory"
  block:
    - name: "Get list of inventories in project '{{ semaphore_project }}'"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/inventory"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_inventories

    - name: "Create inventories"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/inventory"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        # project_id must be integer
        body: >-
          {
            "project_id": {{ semaphore_project_id | int }},
            "name": "{{ semaphore_inventory }}",
            "ssh_key_id": {{ semaphore_ssh_key_id }},
            "type": "file",
            "inventory": "inventory/{{ semaphore_inventory }}/hosts.yml"
          }
        body_format: json
        status_code: 201
        timeout: 5
      register: semaphore_inventory_created
      when:
        - "semaphore_inventories.json | selectattr('name', 'equalto', semaphore_inventory) | length == 0"
      
    - name: "Set fact semaphore_inventory_id"
      ansible.builtin.set_fact:
        semaphore_inventory_id: >-
          {{ (semaphore_inventories.json | selectattr('name', 'equalto', semaphore_inventory) | map(attribute='id') | first)
            | default(semaphore_inventory_created.json.id) }}


- name: "Configure Views"
  block:
    - name: "Get list of current views"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/views"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: sempahore_existing_views

    - name: "Create views"
      changed_when: "semaphore_view_created.status == 201"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/views"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        body: >-
          {{ {
            "project_id": semaphore_project_id |int,
            "title": item.name |string
          } }}
        body_format: json
        status_code: 201
        timeout: 5
      register: semaphore_view_created
      when:
        - "sempahore_existing_views.json | selectattr('title', 'equalto', item.name) | length == 0"
      loop_control:
        label: "Task {{ item.name }}"
      loop: "{{ semaphore_views }}"

    - name: "Get updated list of current views"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/views"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: sempahore_existing_views

    - name: "Set fact semaphore_view_config_id"
      ansible.builtin.set_fact:
        semaphore_view_id: "{{ semaphore_view_id | default({}) | combine({item.title: item.id}) }}"
      loop_control:
        label: "View: {{ item.title }}"
      loop: "{{ sempahore_existing_views.json }}"


- name: "Configure task templates"
  block:
    - name: "Get list of current task templates"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/templates"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_task_templates

    - name: "Create task templates"
      changed_when: "semaphore_task_created.status == 201"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/templates"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        # prevent coercion, see https://stackoverflow.com/a/70990069
        body: >-
          {{ {
            "project_id": semaphore_project_id | int,
            "repository_id": semaphore_repository_id | int,
            "inventory_id": semaphore_inventory_id | int,
            "environment_id": semaphore_environment_id | int,
            "name": item.name | string,
            "description": item.description | string,
            "playbook": item.playbook | string,
            "arguments": item.arguments | string,
            "allow_override_args_in_task": true,
            "view_id": semaphore_view_id[item.view]
          } }}
        body_format: json
        status_code: 201
        timeout: 5
      vars:
        semaphore_environment_id: "{{ semaphore_environments.json \
          | selectattr('name', 'equalto', item.view) \
          | map(attribute='id') | first }}"
      register: semaphore_task_created
      when:
        - "semaphore_task_templates.json | selectattr('name', 'equalto', item.name) | length == 0"
      loop_control:
        label: "Task {{ item.name }}"
      loop: "{{ semaphore_tasks }}"


- name: "Add users to Project"
  block:
    - name: "Get list of current users in project {{ semaphore_project }}"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/users"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_project_users

    - name: "Get list of current users in semaphore"
      changed_when: false
      check_mode: false
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/users"
        method: GET
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        status_code: 200
        timeout: 5
      register: semaphore_existing_users

    - name: "Add users to project {{ semaphore_project }}"
      changed_when: "semaphore_project_created.status == 204"
      ansible.builtin.uri:
        use_proxy: false
        url: "http://localhost:3000/api/project/{{ semaphore_project_id }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ admin_user.api_token }}"
        body: |
          {
            "user_id": {{ item.id }},
            "role":"task_runner",
            "project_id": {{ semaphore_project_id }}
          }
        body_format: json
        status_code: 204
        timeout: 5
      register: semaphore_project_created
      when:
        - "item.username in (semaphore_users_ | map(attribute='login'))"
        - "item.username not in (semaphore_project_users.json | map(attribute='username'))"
      loop: "{{ semaphore_existing_users.json }}"