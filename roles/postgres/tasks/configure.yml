---
- name: Set custom settings
  ansible.builtin.template:
    src: ansible_defined.conf.j2
    dest: /etc/postgresql/{{ postgres_major_version }}/main/conf.d/ansible_defined.conf
    mode: '0644'
  register: ansible_defined_conf

- name: Disable root user access to PostgreSQL
  lineinfile:
    path: /etc/postgresql/{{ postgres_major_version }}/main/pg_hba.conf
    regexp: "^local +all +postgres"
    line: "local   all             postgres                                trust"
    state: present
  register: disable_root

- name: "Allow access to tcp socket from {{ postgres_client_address }}"
  lineinfile:
    path: /etc/postgresql/{{ postgres_major_version }}/main/pg_hba.conf
    regexp: "^host +all +all +{{ postgres_listen_address }}"
    line: "host    all             all             {{ postgres_client_address }}            scram-sha-256"
    state: present
  register: allow_listen_address

- name: Confirm postgres config is valid
  shell: "sudo -u postgres /usr/lib/postgresql/{{ postgres_major_version }}/bin/postgres --config-file=/etc/postgresql/{{ postgres_major_version }}/main/postgresql.conf -C data_directory"
  register: confirm_config
  failed_when: false
  changed_when: false

- name: Fail if config is invalid
  fail:
    msg: "{{ confirm_config.stderr }}"
  when: confirm_config.rc != 0

- name: Restart postgres
  systemd:
    name: postgresql
    state: restarted
  when: ((disable_root is defined and disable_root.changed) or
    ansible_defined_conf.changed or
    allow_listen_address.changed)

- name: Create PostgreSQL users
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    state: present
  loop_control:
    label: "{{ item.name }}"
  loop: "{{ ansible_local.postgres.users }}"

- name: Create PostgreSQL databases
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
  with_items: "{{ ansible_local.postgres.databases }}"
