{#
    Variables
#}
{% set address = ipam_info.instances[inventory_hostname][wg_interface] | first %}
{% set is_server = ipam_info.addresses[address].gateway == address %}
{% set private_key = ansible_local.wireguard[wg_interface].priv %}
{% if is_server %}
{% set listen_port = port_prefix + wg_interface | regex_findall('\\d+') | first %}
{# nat_inside is the external ip of the gateway #}
{% set nat_inside_address = ipam_info.addresses[address].nat_inside %}
{% set nat_inside_interface = ipam_info.addresses[nat_inside_address].interface %}
{% endif %}
{#
    Template
#}
[Interface]
# This is the {{ 'server' if is_server else 'client' }}
PrivateKey = {{ private_key }}
Address = {{ address }}
{% if is_server %}
PostUp = iptables -A FORWARD -i {{ wg_interface }} -j ACCEPT; iptables -t nat -A POSTROUTING -o {{ nat_inside_interface }} -j MASQUERADE
PostDown = iptables -D FORWARD -i {{ wg_interface }} -j ACCEPT; iptables -t nat -D POSTROUTING -o {{ nat_inside_interface }} -j MASQUERADE
ListenPort = {{ listen_port }}
{% else %}
# DNS = 1.1.1.1 # TODO:
{% endif %}

{% for peer_ip in ipam_info.addresses[address].peers %}
{#
    Variables
#}
{% set instance = ipam_info.addresses[peer_ip].instance %}
{% set interface = ipam_info.addresses[peer_ip].interface %}
{% set peer_is_server = peer_ip in ipam_info.ranges.keys() %}
{% set allowed_ips_default = '0.0.0.0/0, ::/0' if peer_is_server else peer_ip %}
{% set allowed_ips_ = hostvars[instance].local_context_data[0]['allowed_ips'][interface] | default(hostvars[instance].allowed_ips[interface]) %}
{% set allowed_ips = allowed_ips_ | default(allowed_ips_default) %}
{% if peer_is_server %}
{% set server_address = ipam_info.addresses[peer_ip].nat_inside.split('/')[0] %}
{% set server_port = port_prefix + interface | regex_findall('\\d+') | first %}
{% set server_custom_endpoint_ = hostvars[instance].local_context_data[0]['wg_endpoints'][interface] | default(hostvars[instance].wg_endpoints[interface]) %}
{% set server_endpoint_ip = server_custom_endpoint_ if server_custom_endpoint_ is defined else server_address %}
{% set server_endpoint = server_endpoint_ip if ':' in server_endpoint_ip else server_endpoint_ip + ':' + server_port %}
{% endif %}
{#
    Template
#}

[Peer]
# name: {{ instance }}
# interface: {{ interface }}
PublicKey = {{ ansible_local.wireguard_peers[instance][interface].pub }}
{% if peer_is_server %}
Endpoint = {{ server_endpoint }}
PersistentKeepalive = 10
{% endif %}
AllowedIPs = {{ allowed_ips }}
{% endfor %}